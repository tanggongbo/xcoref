best {
  data_dir = /scratch/project_2000509/gtang/coref
  
  # Computation limits.
  max_top_antecedents = 50
  max_training_sentences = 5
  top_span_ratio = 0.4
  max_num_extracted_spans = 3900
  max_num_speakers = 20
  max_segment_len = 256

  # hard coding, can be tuned, the number of x-lingual antecedents for unsupervised agreement
  max_top_x_antecedents = 50
  # a threshold for masking x-lingual antecedent, based on mention width, distance
  x-lingual_antecedent_mask_threshold = 20
  # a threshold for x-lingual antecedent, appears before: cur_position+offset
  x-lingual_antecedent_offset_threshold = 50
  # only consider x-lingual coref scores larger than this threshold score in the agreement loss
  threshold_x_score = 0

  # Learning
  bert_learning_rate = 1e-5
  task_learning_rate = 2e-4
  loss_type = marginalized  # {marginalized, hinge}
  mention_loss_coef = 0
  false_new_delta = 1.5  # For loss_type = hinge
  adam_eps = 1e-6
  adam_weight_decay = 1e-2
  warmup_ratio = 0.1
  max_grad_norm = 1  # Set 0 to disable clipping
  gradient_accumulation_steps = 1

  # Model hyperparameters.
  coref_depth = 1  # when 1: no higher order (except for cluster_merging)
  higher_order = attended_antecedent # {attended_antecedent, max_antecedent, entity_equalization, span_clustering, cluster_merging}
  coarse_to_fine = true
  fine_grained = true
  dropout_rate = 0.3
  ffnn_size = 1000
  ffnn_depth = 1
  cluster_ffnn_size = 1000   # For cluster_merging
  cluster_reduce = mean  # For cluster_merging
  easy_cluster_first = false  # For cluster_merging
  cluster_dloss = false  # cluster_merging
  num_epochs = 24
  feature_emb_size = 20
  max_span_width = 30
  use_metadata = true
  use_features = true
  use_segment_distance = true
  model_heads = true
  use_width_prior = true  # For mention score
  use_distance_prior = true  # For mention-ranking score

  # Other.
  conll_eval_path = ${best.data_dir}/dev.english.v4_gold_conll  # gold_conll file for dev
  conll_test_path = ${best.data_dir}/test.english.v4_gold_conll  # gold_conll file for test
  conll_eval_path_zh = ${best.data_dir}/dev.chinese.v4_gold_conll  # gold_conll file for dev
  conll_test_path_zh = ${best.data_dir}/test.chinese.v4_gold_conll  # gold_conll file for test
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  eval_frequency = 1000
  report_frequency = 100
  log_root = ${best.data_dir}
  coref_loss_both = false  # use both-side coref annotations
  with_agreement = false
  saved_model = false  # use pre-trained models
  freezing = false  # freeze the parameters learned in the pretrained models
  checkpoint = false
  eval_only_src = false
  eval_only_trg = false # only one can be true with eval_only_src
  eval_in_domain = false
  testing = false # evaluate models on the test set instead of the dev set
  dev_on_srctrg = false
  no_training = false
  agreement_src2trg = true
  agreement_trg2src = true
  gold_mention = false
  adapter_size = 500  # adapter: from src-side to trg-side; or to cross-lingual coreference scorer
  synthetic = false # using synthetic parallel data, i.e., only use src-side coref annotations
  transfer_zero = false

  train_data =  train
  dev_data = dev
  test_data = test
  direct_transfer = false
  transfer_hybrid = false
  with_adapters = false
  coref_adapter_only = false
  coref_adapter_except = false
  direct_and_proj = false
  top_span_ratio_target = 0.4

  share_module = false  # src and trg side use the same modules, without any adapters

  save_from_steps = 32000

  freeze_bottom = false  # only update top 4 layers when fine_tuning
}

bert_base = ${best}{
  num_docs = 2802
  bert_learning_rate = 1e-05
  task_learning_rate = 2e-4
  max_segment_len = 128
  ffnn_size = 3000
  cluster_ffnn_size = 3000
  max_training_sentences = 11
  bert_tokenizer_name = bert-base-cased
  bert_pretrained_name_or_path = bert-base-cased
}

train_bert_base = ${bert_base}{
  num_docs = 340
  num_epochs = 100
  ffnn_size = 2000
  max_training_sentences = 5
}


train_bert_base_ml0_d1_enzh_both_agreement = ${train_bert_base}{
  mention_loss_coef = 0
  coref_depth = 1
  lan_src = english
  lan_trg = chinese
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = bert-base-cased
  bert_tokenizer_name_trg = bert-base-chinese
  bert_pretrained_name_or_path_trg = bert-base-chinese
  coref_loss_both = true  # use both-side coref annotations
  with_agreement = true
  use_segment_distance = true
  num_docs = 340
}

train_bert_base_ml0_d1_enzh_single = ${train_bert_base}{
  mention_loss_coef = 0
  coref_depth = 1
  lan_src = english
  lan_trg = chinese
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = bert-base-cased
  bert_tokenizer_name_trg = bert-base-chinese
  bert_pretrained_name_or_path_trg = bert-base-chinese
  coref_loss_both = false  # use both-side coref annotations
  with_agreement = false
  use_segment_distance = true
  num_docs = 340
}

train_bert_base_ml0_d1_enzh_single_agreement = ${train_bert_base}{
  mention_loss_coef = 0
  coref_depth = 1
  lan_src = english
  lan_trg = chinese
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = bert-base-cased
  bert_tokenizer_name_trg = bert-base-chinese
  bert_pretrained_name_or_path_trg = bert-base-chinese
  coref_loss_both = false  # use both-side coref annotations
  with_agreement = true
  use_segment_distance = true
  num_docs = 340
}

train_bert_base_ml0_d1_enzh_both = ${train_bert_base}{
  mention_loss_coef = 0
  coref_depth = 1
  lan_src = english
  lan_trg = chinese
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = bert-base-cased
  bert_tokenizer_name_trg = bert-base-chinese
  bert_pretrained_name_or_path_trg = bert-base-chinese
  coref_loss_both = true  # use both-side coref annotations
  with_agreement = false
  use_segment_distance = true
  num_docs = 340
}

train_bert_base_ml0_d2 = ${train_bert_base}{
  mention_loss_coef = 0
  coref_depth = 2
}

bert_large = ${best}{
  num_docs = 2802
  bert_learning_rate = 1e-05
  task_learning_rate = 2e-4
  max_segment_len = 384
  ffnn_size = 3000
  cluster_ffnn_size = 3000
  max_training_sentences = 3
  bert_tokenizer_name = bert-base-cased
  bert_pretrained_name_or_path = bert-large-cased
}

train_bert_large = ${bert_large}{
}

train_bert_large_ml0_d1 = ${train_bert_large}{
  mention_loss_coef = 0
  coref_depth = 1
}

train_bert_large_ml0_d2 = ${train_bert_large}{
  mention_loss_coef = 0
  coref_depth = 2
}

spanbert_base = ${best}{
  num_docs = 2802
  bert_learning_rate = 2e-05
  task_learning_rate = 0.0001
  max_segment_len = 384
  ffnn_size = 3000
  cluster_ffnn_size = 3000
  max_training_sentences = 3
  bert_tokenizer_name = bert-base-cased
  bert_pretrained_name_or_path = ${best.data_dir}/spanbert_base
}

spanbert_base_128 = ${spanbert_base}{
  num_epochs = 100
  max_segment_len = 128
  max_training_sentences = 5
  ffnn_size = 2000
}

train_spanbert_base_ml0_d1_enzh_both_agreement = ${spanbert_base_128}{
  mention_loss_coef = 0
  coref_depth = 1
  lan_src = english
  lan_trg = chinese
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = bert-base-cased
  bert_tokenizer_name_trg = bert-base-chinese
  bert_pretrained_name_or_path_trg = bert-base-chinese
  coref_loss_both = true  # use both-side coref annotations
  with_agreement = true
  use_segment_distance = true
  num_docs = 340
}


train_spanbert_base_ml0_d1_enzh_single = ${spanbert_base_128}{
  mention_loss_coef = 0
  coref_depth = 1
  lan_src = english
  lan_trg = chinese
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = bert-base-cased
  bert_tokenizer_name_trg = bert-base-chinese
  bert_pretrained_name_or_path_trg = bert-base-chinese
  coref_loss_both = false  # use both-side coref annotations
  with_agreement = false
  use_segment_distance = true
  num_docs = 340
}

train_spanbert_base_ml0_d1_enzh_single_agreement = ${spanbert_base_128}{
  mention_loss_coef = 0
  coref_depth = 1
  lan_src = english
  lan_trg = chinese
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = bert-base-cased
  bert_tokenizer_name_trg = bert-base-chinese
  bert_pretrained_name_or_path_trg = bert-base-chinese
  coref_loss_both = false  # use both-side coref annotations
  with_agreement = true
  use_segment_distance = true
  num_docs = 340
}

train_spanbert_base_ml0_d1_enzh_both = ${spanbert_base_128}{
  mention_loss_coef = 0
  coref_depth = 1
  lan_src = english
  lan_trg = chinese
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = bert-base-cased
  bert_tokenizer_name_trg = bert-base-chinese
  bert_pretrained_name_or_path_trg = bert-base-chinese
  coref_loss_both = true  # use both-side coref annotations
  with_agreement = false
  use_segment_distance = true
  num_docs = 340
}


################################################
train_bert_base_ml0_d1_enzh_both_agreement_new = ${train_bert_base_ml0_d1_enzh_both_agreement}{
  num_epochs = 100
  ffnn_size = 3000
  max_training_sentences = 11
}

train_bert_base_ml0_d1_enzh_both_new = ${train_bert_base_ml0_d1_enzh_both}{
  num_epochs = 100
  ffnn_size = 3000
  max_training_sentences = 11
}

train_bert_base_ml0_d1_enzh_single_agreement_new = ${train_bert_base_ml0_d1_enzh_single_agreement}{
  num_epochs = 100
  ffnn_size = 3000
  max_training_sentences = 11
}

train_bert_base_ml0_d1_enzh_single_new = ${train_bert_base_ml0_d1_enzh_single}{
  num_epochs = 100
  ffnn_size = 3000
  max_training_sentences = 11
}

train_bert_base_ml0_d1_enzh_single_new2 = ${train_bert_base_ml0_d1_enzh_single_new}{
}

################################################
train_spanbert_base_ml0_d1_enzh_both_agreement_new = ${train_spanbert_base_ml0_d1_enzh_both_agreement}{
  max_segment_len = 384
  max_training_sentences = 3
  ffnn_size = 3000
}

train_spanbert_base_ml0_d1_enzh_both_new = ${train_spanbert_base_ml0_d1_enzh_both}{
  max_segment_len = 384
  max_training_sentences = 3
  ffnn_size = 3000
}

train_spanbert_base_ml0_d1_enzh_single_agreement_new = ${train_spanbert_base_ml0_d1_enzh_single_agreement}{
  max_segment_len = 384
  max_training_sentences = 3
  ffnn_size = 3000
}

train_spanbert_base_ml0_d1_enzh_single_new = ${train_spanbert_base_ml0_d1_enzh_single}{
  max_segment_len = 384
  max_training_sentences = 3
  ffnn_size = 3000
}


################################################
continuetrain_bert_base_enzh_both_agreement = ${train_bert_base_ml0_d1_enzh_both_agreement_new}{
  saved_model = /scratch/project_2000509/gtang/coref/bert_base/model_Aug19_15-50-54_63000.bin
  num_epochs = 50
}
continuetrain_bert_base_enzh_both = ${train_bert_base_ml0_d1_enzh_both_new}{
  saved_model = /scratch/project_2000509/gtang/coref/bert_base/model_Aug19_15-50-54_63000.bin
  num_epochs = 50
}

continuetrain_bert_base_enzh_single_agreement = ${train_bert_base_ml0_d1_enzh_single_agreement_new}{
  saved_model = /scratch/project_2000509/gtang/coref/bert_base/model_Aug19_15-50-54_63000.bin
  num_epochs = 50
}

continuetrain_bert_base_enzh_single = ${train_bert_base_ml0_d1_enzh_single_new}{
  saved_model = /scratch/project_2000509/gtang/coref/bert_base/model_Aug19_15-50-54_63000.bin
  num_epochs = 50
}

################################################
continuetrain_spanbert_base_enzh_both_agreement = ${train_spanbert_base_ml0_d1_enzh_both_agreement_new}{
  saved_model = /scratch/project_2000509/gtang/coref/train_spanbert_base_ml0_d1/model_Aug13_23-12-42_64000.bin
  num_epochs = 50
}

continuetrain_spanbert_base_enzh_both = ${train_spanbert_base_ml0_d1_enzh_both_new}{
  saved_model = /scratch/project_2000509/gtang/coref/train_spanbert_base_ml0_d1/model_Aug13_23-12-42_64000.bin
  num_epochs = 50
}
continuetrain_spanbert_base_enzh_single_agreement = ${train_spanbert_base_ml0_d1_enzh_single_agreement_new}{
  saved_model = /scratch/project_2000509/gtang/coref/train_spanbert_base_ml0_d1/model_Aug13_23-12-42_64000.bin
  num_epochs = 50
}
continuetrain_spanbert_base_enzh_single = ${train_spanbert_base_ml0_d1_enzh_single_new}{
  saved_model = /scratch/project_2000509/gtang/coref/train_spanbert_base_ml0_d1/model_Aug13_23-12-42_64000.bin
  num_epochs = 50
}

################################################
continuetrain_spanbert_base_enzh_both_agreement_freeze = ${continuetrain_spanbert_base_enzh_both_agreement}{
  freezing = true
}
continuetrain_spanbert_base_enzh_both_freeze = ${continuetrain_spanbert_base_enzh_both}{
  freezing = true
}
continuetrain_spanbert_base_enzh_single_agreement_freeze = ${continuetrain_spanbert_base_enzh_single_agreement}{
  freezing = true
}
################################################

continuetrain_bert_base_enzh_both_agreement_freeze = ${continuetrain_bert_base_enzh_both_agreement}{
  freezing = true
}
continuetrain_bert_base_enzh_both_freeze = ${continuetrain_bert_base_enzh_both}{
  freezing = true
}
continuetrain_bert_base_enzh_single_agreement_freeze = ${continuetrain_bert_base_enzh_single_agreement}{
  freezing = true
}
################################################

train_spanbert_base = ${spanbert_base}{
}

debug_spanbert_base = ${train_spanbert_base}{
}

train_spanbert_base_ml0_d1 = ${train_spanbert_base}{
  mention_loss_coef = 0
  coref_depth = 1
}


train_spanbert_base_ml0_lr2e-4_d1 = ${train_spanbert_base}{
  mention_loss_coef = 0
  task_learning_rate = 2e-4
  coref_depth = 1
}

spanbert_large = ${best}{
  num_docs = 2802
  bert_learning_rate = 1e-05
  task_learning_rate = 0.0003
  max_segment_len = 512
  ffnn_size = 3000
  cluster_ffnn_size = 3000
  max_training_sentences = 3
  bert_tokenizer_name = bert-base-cased
  bert_pretrained_name_or_path = ${best.data_dir}/spanbert_large
}

train_spanbert_large = ${spanbert_large}{
}

train_spanbert_large_ml0_d1 = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 1
}

train_spanbert_large_ml0_lr_d1 = ${train_spanbert_large}{
  mention_loss_coef = 0
  bert_learning_rate = 2e-05
  task_learning_rate = 2e-4
  coref_depth = 1
}

train_spanbert_large_ml0_d2 = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 2
}

train_spanbert_large_ml0_lr_d2 = ${train_spanbert_large}{
  mention_loss_coef = 0
  bert_learning_rate = 2e-05
  task_learning_rate = 2e-4
  coref_depth = 2
}

train_spanbert_large_ml0_sc = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 2
  higher_order = span_clustering
}

train_spanbert_large_ml0_cm_fn1000 = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 1
  higher_order = cluster_merging
  cluster_ffnn_size = 1000
}

train_spanbert_large_ml0_cm_fn1000_dloss = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 1
  higher_order = cluster_merging
  cluster_ffnn_size = 1000
  cluster_dloss = true
}

train_spanbert_large_ml0_cm_fn1000_e1st = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 1
  higher_order = cluster_merging
  cluster_ffnn_size = 1000
  easy_cluster_first = true
}

train_spanbert_large_ml0_cm_fn1000_e1st_dloss = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 1
  higher_order = cluster_merging
  cluster_ffnn_size = 1000
  easy_cluster_first = true
  cluster_dloss = true
}

train_spanbert_large_ml0_cm_fn1000_max = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 1
  higher_order = cluster_merging
  cluster_ffnn_size = 1000
  cluster_reduce = max
}

train_spanbert_large_ml0_cm_fn1000_max_dloss = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 1
  higher_order = cluster_merging
  cluster_ffnn_size = 1000
  cluster_reduce = max
  cluster_dloss = true
}

train_spanbert_large_ml0_cm_fn1000_max_e1st = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 1
  higher_order = cluster_merging
  cluster_ffnn_size = 1000
  cluster_reduce = max
  easy_cluster_first = true
}

train_spanbert_large_ml0_cm_fn1000_max_e1st_dloss = ${train_spanbert_large}{
  mention_loss_coef = 0
  coref_depth = 1
  higher_order = cluster_merging
  cluster_ffnn_size = 1000
  cluster_reduce = max
  easy_cluster_first = true
  cluster_dloss = true
}

train_spanbert_large_ml1_d1 = ${train_spanbert_large}{
  mention_loss_coef = 1
  coref_depth = 1
}

#############################################################
eval_bert_base_enzh = ${train_bert_base_ml0_d1_enzh_single_agreement_new}{
  eval_only_trg = true
  checkpoint = /scratch/project_2000509/gtang/coref/train_bert_base_ml0_d1_enzh_single_agreement_new/model_Aug19_15-11-06_20000.bin
}
eval_bert_base_enzh_en = ${train_bert_base_ml0_d1_enzh_single_agreement_new}{
  eval_only_src = true
  checkpoint = /scratch/project_2000509/gtang/coref/train_bert_base_ml0_d1_enzh_single_agreement_new/model_Aug19_15-11-06_20000.bin
}
eval_bert_base_enzh_notrain = ${train_bert_base_ml0_d1_enzh_single_agreement_new}{
  eval_only_trg = true
  no_training = true
}
eval_bert_base_enzh_notrain_en = ${train_bert_base_ml0_d1_enzh_single_agreement_new}{
  eval_only_src = true
  no_training = true
}

train_bert_base_ml0_d1_enzh_single_agreement_dev_trg = ${train_bert_base_ml0_d1_enzh_single_agreement_new}{
  dev_on_srctrg = true
}
#############################################################

xlmr_base = ${best}{
#   data_dir = /home/gongbo/extra/project/pronoun-proj/coref-hoi/data/xlmr
  data_dir = /scratch/project_2000509/gtang/coref/xlmr
  num_docs = 340
  num_epochs = 100
  bert_learning_rate = 1e-05
  task_learning_rate = 2e-4
  max_segment_len = 128
  ffnn_size = 3000
  cluster_ffnn_size = 3000
  max_training_sentences = 11
  lan_src = english
  lan_trg = chinese
  bert_tokenizer_name_src = xlm-roberta-base
  bert_pretrained_name_or_path_src = xlm-roberta-base
  bert_tokenizer_name_trg = xlm-roberta-base
  bert_pretrained_name_or_path_trg = xlm-roberta-base
  log_root = ${xlmr_base.data_dir}
  coref_loss_both = false  # use both-side coref annotations
  with_agreement = true
}

xlmr_base_dev_on_trg = ${xlmr_base}{
  dev_on_srctrg = true
}
################## transfer transfer_zero ##########################################
transfer_xlmr_en2zh = ${xlmr_base}{
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enzh_xlmr_dev_on_srctrg/model_Sep07_18-42-45_33000.bin
}
transfer_xlmr_en2zh_synthetic = ${xlmr_base}{
  data_dir = /scratch/project_2000509/gtang/coref/xlmr
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enzh_xlmr_base_finetune2/model_Sep27_23-50-58_61000.bin
  train_data = test #dev
  dev_data = test #dev
  test_data = test #dev
  lan_src = english
  lan_trg = chinese
  # conll_eval_path_zh = ${best.data_dir}/dev.chinese.v4_gold_conll  # gold_conll file for dev
#   conll_test_path = ${best.data_dir}/dev.chinese.v4_gold_conll  # gold_conll file for test using dev set
  conll_test_path = ${best.data_dir}/test.chinese.v4_gold_conll  # gold_conll file for test using test set
}

transfer_xlmr_en2zh_synthetic_direct = ${transfer_xlmr_en2zh_synthetic}{
  direct_transfer = true
}

transfer_xlmr_en2zh_synthetic_hybrid = ${transfer_xlmr_en2zh_synthetic}{
  direct_transfer = true
  transfer_hybrid = true
  top_span_ratio_target = 0.05
}

transfer_xlmr_en2zh_synthetic_direct_adapters = ${transfer_xlmr_en2zh_synthetic_direct}{
  with_adapters = true
}

transfer_xlmr_en2ar_synthetic = ${xlmr_base}{
  data_dir = /scratch/project_2000509/gtang/coref/xlmr
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enar_xlmr_base_finetune2/model_Sep30_00-35-42_67000.bin
#   checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enar_xlmr_base_finetune2/model_Oct12_22-11-03_65000.bin
  train_data = test #dev
  dev_data = test #dev
  test_data = test #dev
  lan_src = english
  lan_trg = arabic
#   conll_test_path = ${best.data_dir}/dev.arabic.v4_gold_conll  # gold_conll file for test using dev set
  conll_test_path = ${best.data_dir}/test.arabic.v4_gold_conll  # gold_conll file for test using test set
}

transfer_xlmr_en2ar_synthetic_direct = ${transfer_xlmr_en2ar_synthetic}{
  direct_transfer = true
}

transfer_xlmr_en2ar_synthetic_hybrid = ${transfer_xlmr_en2ar_synthetic}{
  direct_transfer = true
  transfer_hybrid = true
  top_span_ratio_target = 0.05
}

transfer_xlmr_en2ar_synthetic_direct_adapters = ${transfer_xlmr_en2ar_synthetic_direct}{
  with_adapters = true
}


transfer_xlmr_en2de_corbon = ${xlmr_base}{
  data_dir = /scratch/project_2000509/gtang/coref/corbon/xlmr
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune/model_Sep02_18-14-55_63000.bin
  train_data =  corbon.ende
  dev_data = corbon.ende
  test_data = corbon.ende
  lan_src = english
  lan_trg = german
  conll_test_path = /scratch/project_2000509/gtang/coref/corbon/xlmr/corbon.ende.german.conll
}
transfer_xlmr_en2de_corbon_hybrid = ${transfer_xlmr_en2de_corbon}{
  direct_transfer = true
  transfer_hybrid = true
}

transfer_xlmr_en2de_corbon_hybrid_adapter = ${transfer_xlmr_en2de_corbon}{
  direct_transfer = true
  transfer_hybrid = true
  with_adapters = true
}


transfer_xlmr_en2de_corbon_hybrid_adapter_new_version = ${transfer_xlmr_en2de_corbon}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_new/model_Feb24_21-45-33_63000.bin
  direct_transfer = true
  transfer_hybrid = true
  with_adapters = true
}

transfer_xlmr_en2en_hybrid_adapter = ${xlmr_base}{
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enen_xlmr_base_finetune/model_Feb25_22-55-47_58000.bin
  train_data =  dev
  dev_data = dev
  test_data = dev
  lan_src = english
  lan_trg = english
  conll_test_path = ${best.data_dir}/dev.english.v4_gold_conll  # gold_conll file for dev
  direct_transfer = true
  transfer_hybrid = true
  with_adapters = true
}
transfer_xlmr_en2de_corbon_direct = ${transfer_xlmr_en2de_corbon}{
  direct_transfer = true
}
transfer_xlmr_en2de_corbon_direct_adapters = ${transfer_xlmr_en2de_corbon_direct}{
  with_adapters = true
}

transfer_xlmr_en2de_corbon_direct_adapters_coref_only = ${transfer_xlmr_en2de_corbon_direct}{
  with_adapters = true
  coref_adapter_only = true
}

transfer_xlmr_en2de_corbon_direct_share = ${transfer_xlmr_en2de_corbon}{
  direct_transfer = true
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_share_module/model_Oct06_17-07-52_67000.bin
}

transfer_xlmr_en2ru_corbon = ${xlmr_base}{
  data_dir = /scratch/project_2000509/gtang/coref/corbon/xlmr
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enru_xlmr_base_finetune/model_Sep05_18-51-41_65000.bin
  train_data =  corbon.enru
  dev_data = corbon.enru
  test_data = corbon.enru
  lan_src = english
  lan_trg = russian
  conll_test_path = /scratch/project_2000509/gtang/coref/corbon/xlmr/corbon.enru.russian.conll
}

transfer_xlmr_en2ru_corbon_hybrid = ${transfer_xlmr_en2ru_corbon}{
  direct_transfer = true
  transfer_hybrid = true
  top_span_ratio_target = 0.06
}
transfer_xlmr_en2ru_corbon_hybrid_adapters_coref_only = ${transfer_xlmr_en2ru_corbon}{
  direct_transfer = true
  transfer_hybrid = true
  with_adapters = true
  coref_adapter_only = true
}

transfer_xlmr_en2ru_corbon_direct = ${transfer_xlmr_en2ru_corbon}{
  direct_transfer = true
}
transfer_xlmr_en2ru_corbon_direct_adapters = ${transfer_xlmr_en2ru_corbon_direct}{
  with_adapters = true
}

transfer_xlmr_en2ru_corbon_direct_adapters_coref_only = ${transfer_xlmr_en2ru_corbon_direct}{
  with_adapters = true
  coref_adapter_only = true
}
transfer_xlmr_en2ru_corbon_direct_adapters_coref_except = ${transfer_xlmr_en2ru_corbon_direct}{
  with_adapters = true
  coref_adapter_except = true
}

transfer_xlmr_en2ru_corbon_direct_share = ${transfer_xlmr_en2ru_corbon}{
  direct_transfer = true
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enru_xlmr_base_finetune_share_module/model_Oct06_19-11-54_56000.bin
}


################### transfer for parcorful ##########################################

transfer_xlmr_en2de_parcorful = ${xlmr_base}{
  data_dir = /scratch/project_2000509/gtang/coref/parcorful
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune/model_Sep02_18-14-55_63000.bin
  lan_src = english
  lan_trg = german
}

transfer_xlmr_en2de_parcorful_direct = ${transfer_xlmr_en2de_parcorful}{
  direct_transfer = true
}
transfer_xlmr_en2de_parcorful_hybrid = ${transfer_xlmr_en2de_parcorful}{
  saved_model = false
  direct_transfer = true
  transfer_hybrid = true
  data_dir = /scratch/project_2000509/gtang/coref/parcorful
  transfer_zero = true
  synthetic = false
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
}
transfer_xlmr_en2de_parcorful_direct_discomt = ${transfer_xlmr_en2de_parcorful_direct}{
  train_data = discomt
  dev_data = discomt
  test_data = discomt
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/discomt.german.conll
}
transfer_xlmr_en2de_parcorful_direct_ted = ${transfer_xlmr_en2de_parcorful_direct}{
  train_data = ted
  dev_data = ted
  test_data = ted
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/ted.german.conll
}
transfer_xlmr_en2de_parcorful_direct_news = ${transfer_xlmr_en2de_parcorful_direct}{
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
}

################### transfer for semeval2010 ##########################################

transfer_xlmr_semeval = ${xlmr_base}{
  data_dir = /scratch/project_2000509/gtang/coref/semeval2010
  transfer_zero = true
  synthetic = false
  lan_src = english
}

transfer_xlmr_semeval_en2de_direct = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = german
  train_data = test.ende
  dev_data = test.ende
  test_data = test.ende
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune/model_Sep02_18-14-55_63000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/de.test.conll
}

transfer_xlmr_semeval_en2es_direct = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = spanish
  train_data = test.enes
  dev_data = test.enes
  test_data = test.enes
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enes_xlmr_base_finetune2/model_Oct11_11-56-14_63000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/es.test.conll
}
transfer_xlmr_semeval_en2it_direct = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = italian
  train_data = test.enit
  dev_data = test.enit
  test_data = test.enit
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enit_xlmr_base_finetune/model_Oct08_18-26-04_55000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/it.test.conll
}
transfer_xlmr_semeval_en2ca_direct = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = catalan
  train_data = test.enca
  dev_data = test.enca
  test_data = test.enca
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enca_xlmr_base_finetune2/model_Oct11_11-56-14_61000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/ca.test.conll
}
transfer_xlmr_semeval_en2nl_direct = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = dutch
  train_data = test.ennl
  dev_data = test.ennl
  test_data = test.ennl
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ennl_xlmr_base_finetune/model_Oct08_17-53-02_54000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/nl.test.conll
}

################### transfer for semeval2010 ca es no placeholder(inserted pronouns) ######################
transfer_xlmr_semeval_prodrop = ${transfer_xlmr_semeval}{
  data_dir = /scratch/project_2000509/gtang/coref/semeval2010/noplaceholder
}

transfer_xlmr_semeval_en2es_direct_prodrop = ${transfer_xlmr_semeval_prodrop}{
  direct_transfer = true
  lan_trg = spanish
  train_data = test.enes
  dev_data = test.enes
  test_data = test.enes
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enes_xlmr_base_finetune2/model_Oct11_11-56-14_63000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/noplaceholder/es.test.conll
}
transfer_xlmr_semeval_en2ca_direct_prodrop = ${transfer_xlmr_semeval_prodrop}{
  direct_transfer = true
  lan_trg = catalan
  train_data = test.enca
  dev_data = test.enca
  test_data = test.enca
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enca_xlmr_base_finetune2/model_Oct11_11-56-14_61000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/noplaceholder/ca.test.conll
}

transfer_xlmr_semeval_en2es_direct_prodrop_test = ${transfer_xlmr_semeval_prodrop}{
  data_dir = /scratch/project_2000509/gtang/coref/semeval2010/noplaceholder/test
  direct_transfer = true
  lan_trg = spanish
  train_data = test.enes
  dev_data = test.enes
  test_data = test.enes
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enes_xlmr_base_finetune2/model_Oct11_11-56-14_63000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/noplaceholder/test/es.test.conll
}

################### transfer to trg with adapters ##########################################
synthetic_enzh_xlmr_dev_on_srctrg = ${xlmr_base}{
  dev_on_srctrg = true
  synthetic = true
}

synthetic_enzh_goldm_xlmr_dev_on_srctrg = ${xlmr_base}{
  use_features = false  # need to further explore (errors when set to true)
  gold_mention = true
  synthetic = true
  with_agreement = true
  dev_on_srctrg = true
}

#############################################################
goldm_xlmr_base_new = ${xlmr_base}{
  use_features = false  # need to further explore (errors when set to true)
  gold_mention = true
#   eval_in_domain = true
  with_agreement = true
#   dev_on_srctrg = true
  synthetic = true
  train_data =  train_enzh
  dev_data = dev
  test_data = test
}

#############################################################

#############################################################
goldm_xlmr_base = ${xlmr_base}{
  use_features = false  # need to further explore (errors when set to true)
  gold_mention = true
  eval_in_domain = true
  with_agreement = true
  dev_on_srctrg = true
}
#############################################################
synthetic_ende_xlmr_base = ${xlmr_base}{
  num_docs = 2802
  num_epochs = 24
  lan_src = english
  lan_trg = german
  synthetic = true
  with_agreement = true
  with_adapters = true
}

# baseline, see the target-side use the same source-side data
synthetic_enen_xlmr_base_finetune = ${synthetic_ende_xlmr_base}{
  lan_trg = english
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
}


synthetic_ende_xlmr_base_finetune = ${synthetic_ende_xlmr_base}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
}

synthetic_ende_xlmr_base_finetune_new = ${synthetic_ende_xlmr_base}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
}

synthetic_ende_xlmr_base_finetune_freeze_bottom = ${synthetic_ende_xlmr_base}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
  freeze_bottom = true
}
synthetic_ende_xlmr_base_finetune_freeze = ${synthetic_ende_xlmr_base}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
  freezing = true
}

synthetic_ende_xlmr_base_finetune_share_module = ${synthetic_ende_xlmr_base}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
  train_data =  train
  dev_data = dev
  test_data = test
  share_module = true
}



synthetic_ende_xlmr_base_256 = ${synthetic_ende_xlmr_base}{
  max_segment_len = 256
  max_training_sentences = 5
}

synthetic_ende_xlmr_base_384 = ${synthetic_ende_xlmr_base}{
  max_segment_len = 384
  max_training_sentences = 3
}
#############################################################
synthetic_enzh_xlmr_base_finetune = ${xlmr_base}{
  num_docs = 2802
  num_epochs = 24
  lan_src = english
  lan_trg = chinese
  synthetic = true
  with_agreement = true
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
  train_data = train.synthetic
  dev_data = dev
  test_data = test
  with_adapters = true
}

synthetic_enzh_xlmr_base_finetune2 = ${synthetic_enzh_xlmr_base_finetune}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enzh_xlmr_base_finetune/model_Sep26_21-14-51_67000.bin
}

synthetic_enar_xlmr_base_finetune = ${synthetic_enzh_xlmr_base_finetune}{
  lan_trg = arabic
} # model oct08_01 is sharing coref scorer


synthetic_enar_xlmr_base_finetune2 = ${synthetic_enar_xlmr_base_finetune}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enar_xlmr_base_finetune/model_Oct11_22-08-11_54000.bin
#   saved_model = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enar_xlmr_base_finetune/model_Sep28_21-17-25_62000.bin
}

synthetic_enca_xlmr_base_finetune = ${synthetic_enzh_xlmr_base_finetune}{
  lan_trg = catalan
}

synthetic_enes_xlmr_base_finetune = ${synthetic_enzh_xlmr_base_finetune}{
  lan_trg = spanish
}
synthetic_enit_xlmr_base_finetune = ${synthetic_enzh_xlmr_base_finetune}{
  lan_trg = italian
}
synthetic_ennl_xlmr_base_finetune = ${synthetic_enzh_xlmr_base_finetune}{
  lan_trg = dutch
}

synthetic_enes_xlmr_base_finetune2 = ${synthetic_enes_xlmr_base_finetune}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enes_xlmr_base_finetune/model_Oct08_17-51-15_61000.bin
}

synthetic_enca_xlmr_base_finetune2 = ${synthetic_enca_xlmr_base_finetune}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enca_xlmr_base_finetune/model_Oct08_17-51-16_59000.bin
}

######################### multilingual #########################

synthetic_eneu_xlmr_base_finetune = ${synthetic_enzh_xlmr_base_finetune}{
  lan_trg = eu
  num_docs = 14010
  num_epochs = 10
  train_data = multi.train
  dev_data = dev
  test_data = test
  eval_frequency = 4000
  save_from_steps = 64000
}

synthetic_enro_xlmr_base_finetune = ${synthetic_enzh_xlmr_base_finetune}{
  lan_trg = roman
  num_docs = 8406
  num_epochs = 16
  train_data = roman.train
  dev_data = dev
  test_data = test
  eval_frequency = 4000
  save_from_steps = 64000
}

synthetic_ennoro_xlmr_base_finetune = ${synthetic_enzh_xlmr_base_finetune}{
  lan_trg = denlru
  num_docs = 11208
  num_epochs = 12
  train_data = denlru.train
  dev_data = dev
  test_data = test
  eval_frequency = 4000
  save_from_steps = 64000
}

#############################################################
eval_synthetic_ende_xlmr_base1 = ${synthetic_ende_xlmr_base}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune/model_Sep02_18-14-55_61000.bin
}

eval_synthetic_ende_xlmr_base2 = ${synthetic_ende_xlmr_base}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune/model_Sep02_18-14-55_63000.bin
}

eval_synthetic_ende_xlmr_base_new = ${synthetic_ende_xlmr_base}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
#   checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_new/model_Feb24_21-45-33_63000.bin
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_ende_xlmr_base_finetune/model_Apr06_08-01-39_61000.bin
}

eval_synthetic_enen_xlmr_base = ${synthetic_enen_xlmr_base_finetune}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enen_xlmr_base_finetune/model_Feb25_22-55-47_58000.bin
}

eval_synthetic_enar_xlmr = ${eval_synthetic_ende_xlmr_base2}{
#   checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enar_xlmr_base_finetune2/model_Sep30_00-35-42_67000.bin
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_enar_xlmr_base_finetune/model_Apr05_23-18-39_57000.bin
}
eval_synthetic_enar1_xlmr = ${eval_synthetic_ende_xlmr_base2}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enar_xlmr_base_finetune2/model_Oct12_22-11-03_65000.bin
}

eval_synthetic_enca_xlmr = ${eval_synthetic_ende_xlmr_base2}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enca_xlmr_base_finetune2/model_Oct11_11-56-14_61000.bin
}

eval_synthetic_enes_xlmr = ${eval_synthetic_ende_xlmr_base2}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enes_xlmr_base_finetune2/model_Oct11_11-56-14_63000.bin
}

eval_synthetic_enfr_xlmr = ${eval_synthetic_ende_xlmr_base2}{
  #checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enfr_xlmr_base_finetune2/model_Sep06_21-23-15_62000.bin
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enfr_xlmr_base_finetune/model_Sep05_18-49-50_51000.bin
}

eval_synthetic_enit_xlmr = ${eval_synthetic_ende_xlmr_base2}{
#   checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enit_xlmr_base_finetune/model_Oct08_18-26-04_55000.bin
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_enit_xlmr_base_finetune/model_Apr06_08-21-36_56000.bin
}

eval_synthetic_ennl_xlmr = ${eval_synthetic_ende_xlmr_base2}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ennl_xlmr_base_finetune/model_Oct08_17-53-02_54000.bin
}

eval_synthetic_enru_xlmr = ${eval_synthetic_ende_xlmr_base2}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enru_xlmr_base_finetune/model_Sep05_18-51-41_65000.bin
}
eval_synthetic_enzh_xlmr = ${eval_synthetic_ende_xlmr_base2}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enzh_xlmr_base_finetune2/model_Sep27_23-50-58_61000.bin
}
######################  eneu   ################################

eval_synthetic_eneu_xlmr = ${eval_synthetic_ende_xlmr_base2}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_eneu_xlmr_base_finetune/model_Oct28_21-49-44_104000.bin
}

transfer_xlmr_eneu2de_corbon = ${xlmr_base}{
  data_dir = /scratch/project_2000509/gtang/coref/corbon/xlmr
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_eneu_xlmr_base_finetune/model_Oct28_21-49-44_104000.bin
  train_data =  corbon.ende
  dev_data = corbon.ende
  test_data = corbon.ende
  lan_src = english
  lan_trg = german
  conll_test_path = /scratch/project_2000509/gtang/coref/corbon/xlmr/corbon.ende.german.conll
  direct_transfer = true
}


transfer_xlmr_eneu2ru_corbon = ${xlmr_base}{
  data_dir = /scratch/project_2000509/gtang/coref/corbon/xlmr
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_eneu_xlmr_base_finetune/model_Oct28_21-49-44_104000.bin
  train_data =  corbon.enru
  dev_data = corbon.enru
  test_data = corbon.enru
  lan_src = english
  lan_trg = russian
  conll_test_path = /scratch/project_2000509/gtang/coref/corbon/xlmr/corbon.enru.russian.conll
  direct_transfer = true
}

transfer_xlmr_semeval_eneu2de_direct = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = german
  train_data = test.ende
  dev_data = test.ende
  test_data = test.ende
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_eneu_xlmr_base_finetune/model_Oct28_21-49-44_104000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/de.test.conll
}

transfer_xlmr_semeval_eneu2es_direct = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = spanish
  train_data = test.enes
  dev_data = test.enes
  test_data = test.enes
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_eneu_xlmr_base_finetune/model_Oct28_21-49-44_104000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/es.test.conll
}
transfer_xlmr_semeval_eneu2it_direct = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = italian
  train_data = test.enit
  dev_data = test.enit
  test_data = test.enit
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_eneu_xlmr_base_finetune/model_Oct28_21-49-44_104000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/it.test.conll
}

transfer_xlmr_semeval_eneu2nl_direct = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = dutch
  train_data = test.ennl
  dev_data = test.ennl
  test_data = test.ennl
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_eneu_xlmr_base_finetune/model_Oct28_21-49-44_104000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/nl.test.conll
}


#############################################################
synthetic_enfr_xlmr_base_finetune = ${synthetic_ende_xlmr_base_finetune}{
  lan_trg = french
}

synthetic_enfr_xlmr_base_finetune2 = ${synthetic_enfr_xlmr_base_finetune}{
  lan_trg = french
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/
}

synthetic_enru_xlmr_base_finetune = ${synthetic_ende_xlmr_base_finetune}{
  lan_trg = russian
}

synthetic_enru_xlmr_base_finetune_share_module = ${synthetic_ende_xlmr_base_finetune}{
  lan_trg = russian
  train_data =  train
  dev_data = dev
  test_data = test
  share_module = true
}

#############################################################
synthetic_ende_bert_base_finetune = ${bert_base}{
  lan_src = english
  lan_trg = german
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = bert-base-cased
  bert_tokenizer_name_trg = bert-base-german-cased
  bert_pretrained_name_or_path_trg = bert-base-german-cased
  with_agreement = true
  synthetic = true
  saved_model = /scratch/project_2000509/gtang/coref/bert_base/model_Aug19_15-50-54_63000.bin
}

synthetic_ende_spanbert_base_finetune = ${train_spanbert_base_ml0_d1}{
  lan_src = english
  lan_trg = german
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = ${best.data_dir}/spanbert_base
  bert_tokenizer_name_trg = bert-base-german-cased
  bert_pretrained_name_or_path_trg = bert-base-german-cased
  with_agreement = true
  synthetic = true
  saved_model = /scratch/project_2000509/gtang/coref/train_spanbert_base_ml0_d1/model_Aug13_23-12-42_64000.bin
}

synthetic_ende_spanbert_large_finetune = ${train_spanbert_large_ml0_lr_d1}{
  lan_src = english
  lan_trg = german
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = ${best.data_dir}/spanbert_large
  bert_tokenizer_name_trg = bert-base-german-cased
  bert_pretrained_name_or_path_trg = bert-base-german-cased
  with_agreement = true
  synthetic = true
  saved_model = /scratch/project_2000509/gtang/coref/train_spanbert_large_ml0_lr_d1/model_Aug13_23-12-42_63000.bin
}

eval_synthetic_ende_2bert = ${synthetic_ende_bert_base_finetune}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
  checkpoint = /scratch/project_2000509/gtang/coref/synthetic_ende_bert_base_finetune/model_Sep06_17-25-26_67000.bin
}

eval_synthetic_ende_spanbert = ${synthetic_ende_spanbert_base_finetune}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
  checkpoint = /scratch/project_2000509/gtang/coref/synthetic_ende_spanbert_base_finetune/model_Oct26_22-24-34_59000.bin
}

transfer_2bert_en2de_corbon = ${synthetic_ende_bert_base_finetune}{
  data_dir = /scratch/project_2000509/gtang/coref/corbon/bert
  transfer_zero = true
  saved_model = false
  synthetic = false
  eval_only_trg = true
  checkpoint = /scratch/project_2000509/gtang/coref/synthetic_ende_bert_base_finetune/model_Sep06_17-25-26_67000.bin
  train_data =  corbon.ende
  dev_data = corbon.ende
  test_data = corbon.ende
  lan_src = english
  lan_trg = german
  conll_test_path = /scratch/project_2000509/gtang/coref/corbon/xlmr/corbon.ende.german.conll
  direct_transfer = true
}
transfer_spanbert_en2de_corbon = ${synthetic_ende_spanbert_base_finetune}{
  data_dir = /scratch/project_2000509/gtang/coref/corbon/bert
  transfer_zero = true
  saved_model = false
  synthetic = false
  eval_only_trg = true
  checkpoint = /scratch/project_2000509/gtang/coref/synthetic_ende_spanbert_base_finetune/model_Oct26_22-24-34_59000.bin
  train_data =  corbon.ende
  dev_data = corbon.ende
  test_data = corbon.ende
  lan_src = english
  lan_trg = german
  conll_test_path = /scratch/project_2000509/gtang/coref/corbon/xlmr/corbon.ende.german.conll
  direct_transfer = true
}



#################################################################
synthetic_enen_xlmr_base_finetune_share_module = ${synthetic_enen_xlmr_base_finetune}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
  share_module = true
  max_top_x_antecedents = 20
  x-lingual_antecedent_offset_threshold = 50
  threshold_x_score = 0
}


synthetic_ende_xlmr_base_finetune_share_module_new = ${synthetic_ende_xlmr_base}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
  train_data =  train
  dev_data = dev
  test_data = test
  share_module = true
  max_top_x_antecedents = 20
  x-lingual_antecedent_offset_threshold = 50
  threshold_x_score = 0
}


local_synthetic_enen_xlmr_base_finetune_share_module = ${synthetic_ende_xlmr_base}{
#   data_dir = /home/gongbo/extra/project/pronoun-proj/coref-hoi/data/xlmr
  lan_trg = english
#   share_module = true
  max_top_x_antecedents = 2
  x-lingual_antecedent_offset_threshold = 5
  threshold_x_score = 0

  max_top_antecedents = 5
  max_training_sentences = 4
  top_span_ratio = 0.05
  max_num_extracted_spans = 10

  train_data =  dev
  dev_data = dev
  test_data = dev
}

local_synthetic_enzh_xlmr_base_finetune_share_module = ${synthetic_ende_xlmr_base}{
  lan_trg = chinese
  share_module = true
  with_adapters = false
  max_top_x_antecedents = 2
  x-lingual_antecedent_offset_threshold = 5
  threshold_x_score = 0

  max_top_antecedents = 5
  max_training_sentences = 4
  top_span_ratio = 0.05
  max_num_extracted_spans = 10

  train_data =  train_enzh
  dev_data = train_enzh
  test_data = train_enzh
}

transfer_xlmr_en2en_hybrid_shared = ${xlmr_base}{
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enen_xlmr_base_finetune_share_module/model_Feb28_23-44-01_64000.bin
  train_data =  dev
  dev_data = dev
  test_data = dev
  lan_src = english
  lan_trg = english
  conll_test_path = ${best.data_dir}/dev.english.v4_gold_conll  # gold_conll file for dev
  direct_transfer = true
  transfer_hybrid = true
  share_module = true
}
transfer_xlmr_en2en_hybrid_adapter_using_ende = ${xlmr_base}{
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enen_xlmr_base_finetune/model_Feb25_22-55-47_58000.bin
  train_data =  dev
  dev_data = dev
  test_data = dev
  lan_src = english
  lan_trg = english
  conll_test_path = ${best.data_dir}/dev.english.v4_gold_conll  # gold_conll file for dev
  direct_transfer = true
  transfer_hybrid = true
  with_adapters = true
}

eval_synthetic_enen_xlmr_base_shared = ${synthetic_enen_xlmr_base_finetune}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_enen_xlmr_base_finetune_share_module/model_Feb28_23-44-01_64000.bin

}

eval_synthetic_ende_xlmr_base_share_module = ${synthetic_ende_xlmr_base}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_share_module_new/model_Mar01_15-35-30_57000.bin
}

eval_synthetic_ende_xlmr_base_constrain_argmax = ${synthetic_ende_xlmr_base}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar04_23-55-42_61000.bin
#   checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar11_11-47-36_61000.bin
# adapter_size = 1024, not as good as 500
}
# transfer_xlmr_en2de_parcorful_direct_news = ${transfer_xlmr_en2de_parcorful_direct}{
#   checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_share_module_new/model_Mar01_15-35-30_57000.bin
#   train_data = news
#   dev_data = news
#   test_data = news
#   conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
# }

transfer_xlmr_en2de_parcorful_hybrid_share_module_news = ${transfer_xlmr_en2de_corbon}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_share_module_new/model_Mar01_15-35-30_57000.bin
  direct_transfer = true
  transfer_hybrid = true
  data_dir = /scratch/project_2000509/gtang/coref/parcorful
  transfer_zero = true
  synthetic = false
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll

}
transfer_xlmr_en2de_corbon_direct_share_module = ${transfer_xlmr_en2de_corbon}{
  direct_transfer = true
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_share_module_new/model_Mar01_15-35-30_57000.bin
}

transfer_xlmr_en2de_corbon_direct_constrain_argmax = ${transfer_xlmr_en2de_corbon}{
  direct_transfer = true
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar04_23-55-42_61000.bin
}
transfer_xlmr_semeval_en2de_direct_constrain = ${transfer_xlmr_semeval}{
  direct_transfer = true
  lan_trg = german
  train_data = test.ende
  dev_data = test.ende
  test_data = test.ende
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar04_23-55-42_61000.bin
  conll_test_path = /scratch/project_2000509/gtang/coref/semeval2010/de.test.conll
}


############
synthetic_ende_xlmr_base_finetune_constrain_argmax = ${synthetic_ende_xlmr_base}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
#   adapter_size = 1024
}
transfer_xlmr_en2de_parcorful_hybrid_constrain_news = ${transfer_xlmr_en2de_corbon}{
  saved_model = false
  #checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain/model_Mar02_23-16-46_61000.bin
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar04_23-55-42_61000.bin
  direct_transfer = true
  transfer_hybrid = true
  data_dir = /scratch/project_2000509/gtang/coref/parcorful
  transfer_zero = true
  synthetic = false
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
}

transfer_xlmr_en2de_parcorful_direct_constrain_news = ${transfer_xlmr_en2de_parcorful_direct}{
  #checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain/model_Mar02_23-16-46_61000.bin
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar04_23-55-42_61000.bin
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
}

transfer_xlmr_en2de_parcorful_direct_constrain_ted = ${transfer_xlmr_en2de_parcorful_direct}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar04_23-55-42_61000.bin
  train_data = ted
  dev_data = ted
  test_data = ted
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/ted.german.conll
}

transfer_xlmr_en2de_corbon_hybrid_adapter_constrain_argmax = ${transfer_xlmr_en2de_corbon}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar04_23-55-42_61000.bin
  direct_transfer = true
  transfer_hybrid = true
  with_adapters = true
}
transfer_xlmr_en2de_corbon_project_adapter_constrain_argmax = ${transfer_xlmr_en2de_corbon}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar04_23-55-42_61000.bin
  direct_transfer = false
  transfer_hybrid = true
  with_adapters = true
}

synthetic_ende_spanbert_base_finetune_constrain = ${train_spanbert_base_ml0_d1}{
  lan_src = english
  lan_trg = german
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = ${best.data_dir}/spanbert_base
  bert_tokenizer_name_trg = bert-base-german-cased
  bert_pretrained_name_or_path_trg = bert-base-german-cased
  with_agreement = true
  synthetic = true
  saved_model = /scratch/project_2000509/gtang/coref/train_spanbert_base_ml0_d1/model_Aug13_23-12-42_64000.bin
}

eval_synthetic_ende_spanbert_constrain = ${synthetic_ende_spanbert_base_finetune}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
#   checkpoint = /scratch/project_2000509/gtang/coref/synthetic_ende_spanbert_base_finetune_constrain/model_Mar07_16-30-31_65000.bin
  checkpoint = /scratch/project_2000509/gtang/coref/synthetic_ende_spanbert_base_finetune_constrain/model_Apr06_11-50-26_66000.bin
}

synthetic_enen_spanbert_base_constrain = ${synthetic_ende_spanbert_base_finetune}{
  lan_trg = english
  lan_src = english
  bert_tokenizer_name_src = bert-base-cased
  bert_pretrained_name_or_path_src = ${best.data_dir}/spanbert_base
  bert_tokenizer_name_trg = bert-base-cased
  bert_pretrained_name_or_path_trg = ${best.data_dir}/spanbert_base
  with_agreement = true
  synthetic = true
  saved_model = /scratch/project_2000509/gtang/coref/train_spanbert_base_ml0_d1/model_Aug13_23-12-42_64000.bin
}

eval_synthetic_enen_spanbert_constrain = ${synthetic_enen_spanbert_base_constrain}{
  eval_only_src = true
  train_data = dev # fake, load less data than train
  checkpoint = /scratch/project_2000509/gtang/coref/synthetic_enen_spanbert_base_constrain/model_Mar08_12-00-49_56000.bin
}


synthetic_ende_xlmr_base_finetune_constrain_marginalized = ${synthetic_ende_xlmr_base}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
}

eval_synthetic_ende_xlmr_base_constrain_marginalized = ${synthetic_ende_xlmr_base}{
  lan_src = english
  lan_trg = chinese # fake trg-side lan, in order to have such data
  synthetic = true
  eval_only_src = true
  train_data = dev # fake, load less data than train
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_marginalized/model_Mar08_13-46-48_57000.bin
}

transfer_xlmr_en2de_parcorful_hybrid_constrain_news_marginalized = ${transfer_xlmr_en2de_corbon}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_marginalized/model_Mar08_13-46-48_57000.bin
  direct_transfer = true
  transfer_hybrid = true
  data_dir = /scratch/project_2000509/gtang/coref/parcorful
  transfer_zero = true
  synthetic = false
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
}

transfer_xlmr_en2de_parcorful_direct_constrain_news_marginalized = ${transfer_xlmr_en2de_parcorful_direct}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_marginalized/model_Mar08_13-46-48_57000.bin
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
}


transfer_xlmr_en2de_corbon_hybrid_constrain_argmax = ${transfer_xlmr_en2de_corbon}{
  saved_model = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/synthetic_ende_xlmr_base_finetune_constrain_argmax/model_Mar04_23-55-42_61000.bin
  direct_transfer = true
  transfer_hybrid = true
  with_adapters = true
}

####=====new version=================
new_synthetic_enen_xlmr_base_finetune = ${synthetic_ende_xlmr_base}{
  lan_trg = english
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
}

new_synthetic_enzh_xlmr_base_finetune = ${xlmr_base}{
  num_docs = 2802
  num_epochs = 24
  lan_src = english
  lan_trg = chinese
  synthetic = true
  with_agreement = true
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
  train_data = train.synthetic
  dev_data = dev
  test_data = test
  with_adapters = true
}

new_synthetic_enar_xlmr_base_finetune = ${new_synthetic_enzh_xlmr_base_finetune}{
  lan_trg = arabic
}
new_synthetic_enca_xlmr_base_finetune = ${new_synthetic_enzh_xlmr_base_finetune}{
  lan_trg = catalan
}
new_synthetic_enes_xlmr_base_finetune = ${new_synthetic_enzh_xlmr_base_finetune}{
  lan_trg = spanish
}
new_synthetic_enit_xlmr_base_finetune = ${new_synthetic_enzh_xlmr_base_finetune}{
  lan_trg = italian
}
new_synthetic_ennl_xlmr_base_finetune = ${new_synthetic_enzh_xlmr_base_finetune}{
  lan_trg = dutch
}
new_synthetic_ende_xlmr_base_finetune = ${synthetic_ende_xlmr_base}{
  saved_model = /scratch/project_2000509/gtang/coref/xlmr/xlmr_base_en_all/model_Sep01_21-54-12_66000.bin
}
new_synthetic_enfr_xlmr_base_finetune = ${new_synthetic_ende_xlmr_base_finetune}{
  lan_trg = french
}
new_synthetic_enru_xlmr_base_finetune = ${new_synthetic_ende_xlmr_base_finetune}{
  lan_trg = russian
}



new_transfer_xlmr_en2zh_direct = ${xlmr_base}{
  data_dir = /scratch/project_2000509/gtang/coref/xlmr
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_enzh_xlmr_base_finetune/model_Mar12_07-26-46_53000.bin
  train_data = test #dev
  dev_data = test #dev
  test_data = test #dev
  lan_src = english
  lan_trg = chinese
#   conll_test_path = ${best.data_dir}/dev.chinese.v4_gold_conll  # gold_conll file for test using dev set
  conll_test_path = ${best.data_dir}/test.chinese.v4_gold_conll  # gold_conll file for test using test set
  direct_transfer = true
}

new_transfer_xlmr_en2ar_direct = ${new_transfer_xlmr_en2zh_direct}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_enar_xlmr_base_finetune/model_Mar12_16-20-59_64000.bin
  lan_trg = arabic
#   conll_test_path = ${best.data_dir}/dev.arabic.v4_gold_conll  # gold_conll file for test using dev set
  conll_test_path = ${best.data_dir}/test.arabic.v4_gold_conll  # gold_conll file for test using test set
}

################### transfer for semeval2010 ##########################################

new_transfer_xlmr_semeval_en2de_direct = ${transfer_xlmr_semeval_en2de_direct}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_ende_xlmr_base_finetune/model_Mar12_07-20-36_57000.bin
}

new_transfer_xlmr_semeval_en2es_direct = ${transfer_xlmr_semeval_en2es_direct}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_enes_xlmr_base_finetune/model_Mar12_16-10-26_67000.bin
}
new_transfer_xlmr_semeval_en2it_direct = ${transfer_xlmr_semeval_en2it_direct}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_enit_xlmr_base_finetune/model_Mar11_22-37-54_65000.bin
}
new_transfer_xlmr_semeval_en2ca_direct = ${transfer_xlmr_semeval_en2ca_direct}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_enca_xlmr_base_finetune/model_Mar13_00-55-49_55000.bin
}
new_transfer_xlmr_semeval_en2nl_direct = ${transfer_xlmr_semeval_en2nl_direct}{
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_ennl_xlmr_base_finetune/model_Mar12_07-24-17_62000.bin
}

new_transfer_xlmr_en2de_corbon_direct = ${transfer_xlmr_en2de_corbon}{
  direct_transfer = true
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_ende_xlmr_base_finetune/model_Mar12_07-20-36_57000.bin
}
new_transfer_xlmr_en2ru_corbon_direct = ${transfer_xlmr_en2ru_corbon}{
  direct_transfer = true
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_enru_xlmr_base_finetune/model_Mar12_16-07-13_67000.bin
}
new_transfer_xlmr_en2de_parcorful_direct = ${transfer_xlmr_en2de_parcorful}{
  direct_transfer = true
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_ende_xlmr_base_finetune/model_Mar12_07-20-36_57000.bin
}

new_transfer_xlmr_en2de_parcorful_direct_ted = ${transfer_xlmr_en2de_parcorful_direct}{
  train_data = ted
  dev_data = ted
  test_data = ted
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/ted.german.conll
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_ende_xlmr_base_finetune/model_Mar12_07-20-36_57000.bin
}
new_transfer_xlmr_en2de_parcorful_direct_news = ${transfer_xlmr_en2de_parcorful_direct}{
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_ende_xlmr_base_finetune/model_Mar12_07-20-36_57000.bin
}

new_transfer_xlmr_en2en_hybrid = ${xlmr_base}{
  transfer_zero = true
  synthetic = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_enen_xlmr_base_finetune/model_Mar11_22-36-51_63000.bin
  train_data =  dev
  dev_data = dev
  test_data = dev
  lan_src = english
  lan_trg = english
  conll_test_path = ${best.data_dir}/dev.english.v4_gold_conll  # gold_conll file for dev
  direct_transfer = true
  transfer_hybrid = true
}

new_transfer_xlmr_en2de_parcorful_hybrid_news = ${transfer_xlmr_en2de_corbon}{
  saved_model = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_ende_xlmr_base_finetune/model_Mar12_07-20-36_57000.bin
  direct_transfer = true
  transfer_hybrid = true
  data_dir = /scratch/project_2000509/gtang/coref/parcorful
  transfer_zero = true
  synthetic = false
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
}

new_transfer_xlmr_en2de_parcorful_hybrid_news_both = ${transfer_xlmr_en2de_corbon}{
  saved_model = false
  checkpoint = /scratch/project_2000509/gtang/coref/xlmr/new_synthetic_ende_xlmr_base_finetune/model_Mar12_07-20-36_57000.bin
  direct_transfer = true
  transfer_hybrid = true
  data_dir = /scratch/project_2000509/gtang/coref/parcorful
  transfer_zero = true
  synthetic = false
  train_data = news
  dev_data = news
  test_data = news
  conll_test_path = /scratch/project_2000509/gtang/coref/parcorful/news.german.conll
}